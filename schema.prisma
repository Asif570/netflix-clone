datasource db {
    provider          = "mongodb"
    url               = env("DATABASE_URL")
    shadowDatabaseUrl = env("SHADOW_DATABASE_URL") // Only needed when using a cloud provider that doesn't support the creation of new databases, like Heroku. Learn more: https://pris.ly/d/migrate-shadow
}

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["referentialActions"] // You won't need this in Prisma 3.X or higher.
}

model Account {
    id                       String  @id @default(auto()) @map("_id") @db.ObjectId
    userId                   String  @db.ObjectId
    type                     String
    provider                 String
    providerAccountId        String
    refresh_token            String? @db.String
    access_token             String? @db.String
    expires_at               Int?
    created_at               Int?
    token_type               String?
    scope                    String?
    id_token                 String? @db.String
    session_state            String?
    refresh_token_expires_in Int?
    user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(auto()) @map("_id") @db.ObjectId
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id             String    @id @default(auto()) @map("_id") @db.ObjectId
    username       String?
    email          String?   @unique
    emailVerified  DateTime?
    hashedPassword String?
    image          String?
    favoriteIds    String[]  @db.ObjectId
    accounts       Account[]
    sessions       Session[]
}

model VerificationToken {
    id         String   @id @default(auto()) @map("_id") @db.ObjectId
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Movie {
    id           String @id @default(auto()) @map("_id") @db.ObjectId
    title        String
    description  String
    videoUrl     String
    thumbnailUrl String
    genre        String
    duration     String
}
